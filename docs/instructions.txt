Liste aller Instruktionen:

LOAD:
Lädt Byte aus Speicher in Register ( an least significant )
opcode: 00000001 (0x1)
Beispiel: LOAD R0 R1 -> Lädt Daten aus Speicher aus Adresse gespeichert in R0 in Register R1
Beispiel: LOAD R0 R1 -> R0 enthält adresse 10101111 00110101, wert an adresse ist 01111111, dann enthält Register R1
danach den Wert 00000000 01111111

STORE:
Speichert Byte (least significant) aus Register in Speicher
opcode: 00000010 (0x2)
Beispiel: STORE R0 R1 -> Speichert least significant byte aus R0 in memory addresse gespeichert in R1

SET:
Setzt wert von register, nicht anwendbar auf read-only register
opcode: 00000011 (0x3)
Beispiel: SET R0 00000000 00000111 -> Setzt R0 auf den wert 7 (00000000 00000111)

LOADH:
Lädt Half Word aus Speicher in Register
opcode: 00000100 (0x4)

STOREH: Speichert Half Word aus Register in Speicher
opcode: 00000101 (0x5)

ADD:
Addiert Wert
opcode: 00000110 (0x6)
Beispiel: ADD R0 R1 -> Addiert die Werte in R0 und R1 (r0 - r1) und speichert das ergebnis in R0

SUB:
Subtrahiert Wert
opcode: 00000111 (0x7)
Beispiel: SUB R0 R1 -> Subtrahiert R1 von R0 und speichert das Ergebnis in R0

CJUMP
Conditional Jump
opcode: 00001000 (0x8)
Beispiel: CJUMP R0 R1 -> Springt an adresse in R0 wenn der wert in R1 gleich 0 ist

MOV
move
opcode: 00001001 (0x9)
Beispiel: MOV R0 R1 -> kopiert wert von R0 in R1

CJUMPI
Conditional Jump inverted
opcode: 00001010 (0xa)
Beispiel: CJUMP R0 R1 -> Springt an adresse in R0 wenn der wert in R1 ungleich 0 ist
